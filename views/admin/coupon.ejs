<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Calos Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:images" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="images/x-icon" href="/admin/assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/admin/assets/css/main.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-dark@5/dark.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

</head>
<body>
    <section class="pt-150 pb-150">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 m-auto">
                    <div class="row align-items-center justify-content-center">

                        <div class="col-lg-6">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Create New Coupon</h4>
                                </div>
                                
                                <div class="card-body">
                                    <% if (locals.message) { %>
                                        <p class="text-danger"><%= locals.message %></p>
                                      <% } %>
  

  <form id="couponForm">
    <div class="mb-4">
      <label class="form-label" for="code">Coupon Code:</label>
      <input class="form-control" type="text" name="code" id="code" onfocusout="validate_couponCode()" required>
      <div id="coupon-error" class="text-danger"></div>
    </div><br>
    <div class="mb-4">
      <label class="form-label" for="discountType">Discount Type:</label>
      <select class="form-select" name="discountType" id="discountType" required>
        <option value="percentage">Percentage</option>
        <option value="fixedAmount">Fixed Amount</option>
      </select>
    </div><br>
    <div class="mb-4">
      <label class="form-label" for="discountValue">Discount Value:</label>
      <input class="form-control" type="number" name="discountValue" id="discountValue" step="0.01" required onfocusout="validate_discountValue()">
      <div id="discountValue-error" class="text-danger"></div>
    </div><br>
    <div class="mb-4">
      <label class="form-label" for="isActive">Active:</label>
      <input type="checkbox" name="isActive" id="isActive" checked>
    </div><br>
    <div class="mb-4">
      <label class="form-label" for="startDate">Start Date (optional):</label>
      <input class="form-control" type="date" name="startDate" id="startDate">
    </div><br>
    <div class="mb-4">
      <label class="form-label" for="endDate">End Date (optional):</label>
      <input class="form-control" type="date" name="endDate" id="endDate">
    </div><br>
    <div class="mb-4">
      <label class="form-label" for="minimumOrderAmount">Minimum Order Amount (optional):</label>
      <input class="form-control" type="number" name="minimumOrderAmount" id="minimumOrderAmount" min="0">
    </div><br>
    <div class="mb-4">
      <label class="form-label" for="description">Description (optional):</label>
      <textarea class="form-control" name="description" id="description" cols="30" rows="5"></textarea>
    </div><br>
    <div class="mb-4">
      <label class="form-label" for="products">Products (optional, comma-separated product IDs):</label>
      <input class="form-control" type="text" name="products" id="products">
    </div><br>
    <div class="mb-4">
      <label class="form-label" for="categories">Categories (optional, comma-separated categories):</label>
      <input class="form-control" type="text" name="categories" id="categories">
    </div><br>
    <button class="btn btn-md rounded font-sm hover-up" type="submit">Create Coupon</button>
  </form>



                                </div>
                            </div></div>
  
</div>
</div>
</div>
</div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="/admin/assets/js/vendors/jquery-3.6.0.min.js"></script>
<script src="/admin/assets/js/vendors/bootstrap.bundle.min.js"></script>
<script src="/admin/assets/js/vendors/select2.min.js"></script>
<script src="/admin/assets/js/vendors/perfect-scrollbar.js"></script>
<script src="/admin/assets/js/vendors/jquery.fullscreen.min.js"></script>
<!-- Main Script -->
<script src="/admin/assets/js/main.js" type="text/javascript"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


  <script>
    function validate_couponCode() {
      const couponCode = document.getElementById('code').value;
      const errorDiv = document.getElementById('coupon-error');
      
      // Reset error message
      errorDiv.textContent = '';

      // Example criteria: Coupon code must be alphanumeric and between 5 to 20 characters long
      const regex = /^[a-zA-Z0-9]{5,20}$/;

      if (!regex.test(couponCode)) {
        errorDiv.textContent = 'Invalid coupon code. It must be 5-20 alphanumeric characters.';
        return false;
      }

      return true;
    }

    function validate_discountValue() {
      const discountValue = parseFloat(document.getElementById('discountValue').value);
      const errorDiv = document.getElementById('discountValue-error');
      
      // Reset error message
      errorDiv.textContent = '';

      // Example criteria: Discount value must be a number greater than or equal to 0
      if (isNaN(discountValue) || discountValue < 0) {
        errorDiv.textContent = 'Invalid discount value. It must be a number greater than or equal to 0.';
        return false;
      }

      return true;
    }

    function validateForm() {
      const isCouponCodeValid = validate_couponCode();
      const isDiscountValueValid = validate_discountValue();
      
      // Prevent form submission if validation fails
      return isCouponCodeValid && isDiscountValueValid;
    }

    document.getElementById('couponForm').addEventListener('submit', async function(event) {
      event.preventDefault();
      if (validateForm()) {
        const formData = new FormData(this);
        const formObject = {};
        formData.forEach((value, key) => {
          formObject[key] = value;
        });

        try {
          const response = await fetch('/admin/coupon', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formObject)
          });

          if (response.ok) {
            window.location.href = '/admin/coupon';
          } else {
            const result = await response.json();
            alert(result.message || 'Error creating coupon');
          }
        } catch (error) {
          console.error('Error:', error);
        //   alert('An error occurred while creating the coupon');
        swal.fire({
          icon: 'Error',
          title: 'Oops!',
          text: 'This coupon is already exists.',
          showConfirmButton: true
        });
        }
      }
    });
  </script>


</body>
</html>
